

@{
    ViewData["Title"] = "Agregar Producto";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<CrediV1_Prueba.Entities.CategoriaEnt> categorias = ViewData["categorias"] as List<CrediV1_Prueba.Entities.CategoriaEnt>;
    List<CrediV1_Prueba.Entities.ProveedorEnt> proveedores = ViewData["proveedores"] as List<CrediV1_Prueba.Entities.ProveedorEnt>;
}

<div class="container">
    <div class="card shadow-2-strong mb-5 mb-lg-0" style="border-radius: 16px;">
        <div class="card-body p-4">
            <div class="form-outline mb-5 mb-xl-4">
                <h2>Agregar Producto</h2>
            </div>
            <form id="agregarProductoForm">
                <div class="row">
                    <div class="col-lg-8 col-xl-6">
                        <div class="form-outline mb-5 mb-xl-4">
                            <input type="text" id="Nombre" name="Nombre" class="form-control form-control-lg" placeholder="Nombre" required />
                        </div>
                        <div class="form-outline mb-5 mb-xl-4">
                            <input type="number" step="0.01" id="Costo" name="Costo" class="form-control form-control-lg" placeholder="Costo" required />
                        </div>
                        <div class="form-outline mb-4 mb-xl-4">
                            <input type="number" id="CantidadStock" name="CantidadStock" class="form-control form-control-lg" placeholder="Cantidad en Stock" required />
                        </div>
                       

                        <div class="form-outline mb-5 mb-xl-4">
                            <select id="idCategoria" name="idCategoria" class="form-control form-control-lg" required>


                                <option value="">Selecciona una categoria</option>
                                @foreach (var categoria in categorias)
                                {
                                    <option value="@categoria.idCategoria">@categoria.descripcion</option>
                                }

                            </select>
                        </div>


                        <div class="form-outline mb-5 mb-xl-4">
                            <select id="ProveedorId" name="ProveedorId" class="form-control form-control-lg" required>
                               
                               
                                    <option value="">Selecciona un proveedor</option>
                                    @foreach (var proveedor in proveedores)
                                    {
                                        <option value="@proveedor.idProveedor">@proveedor.nombre</option>
                                    }
                                
                            </select>
                        </div>
                    </div>
                </div>
                <div class="form-outline mb-4 mb-xl-4">
                    <button type="submit" class="btn " id="button-addon2">Agregar Producto</button>
                    <a href="@Url.Action("Index", "Inventario")" class="btn" id="button-addon2">Volver</a>
                </div>
            </form>
        </div>
    </div>
</div>

<nav aria-label="Page navigation example" style="background-color:aquamarine">
    <ul class="pagination justify-content-center">
        <li class="page-item disabled">
            <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Anterior</a>
        </li>
        <li class="page-item"><a class="page-link" href="#">1</a></li>
        <li class="page-item"><a class="page-link" href="#">2</a></li>
        <li class="page-item"><a class="page-link" href="#">3</a></li>
        <li class="page-item">
            <a class="page-link" href="#">Siguiente</a>
        </li>
    </ul>
</nav>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const form = document.getElementById('agregarProductoForm');

        form.addEventListener('submit', async function (event) {
            event.preventDefault();

            // Obtener los valores de los campos del formulario
            const nombre = document.getElementById('Nombre').value;
            const costo = document.getElementById('Costo').value;
            const cantidadStock = document.getElementById('CantidadStock').value;
            const estadoElement = document.getElementById('Estado');
            const estado = estadoElement ? estadoElement.value : null;
            const categoria = document.getElementById('idCategoria').value;
            const proveedor = document.getElementById('ProveedorId').value;

            // Crear el objeto de datos
            const data = {
                Nombre: nombre,
                Costo: parseFloat(costo),
                CantidadStock: parseInt(cantidadStock),
                Estado: estado ? estado.toLowerCase() === 'activo' : false,
                Categoria: parseInt(categoria),
                Proveedor: parseInt(proveedor)
            };

            Swal.fire({
                title: '¿Estás seguro?',
                text: "¡Agregarás este producto!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#0d6efd',
                cancelButtonColor: '#c31e1e',
                confirmButtonText: 'Sí, agregar',
                cancelButtonText: 'Cancelar'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        const response = await fetch('@Url.Action("GuardarProductoNuevo", "Inventario")', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(data)
                        });

                        if (response.ok) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Producto agregado',
                                text: 'El producto ha sido agregado correctamente.'
                            }).then(() => {
                                window.location.href = '@Url.Action("ListadoProducto", "Inventario")';
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'Hubo un problema al agregar el producto.'
                            });
                        }
                    } catch (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Hubo un problema al agregar el producto.'
                        });
                    }
                }
            });
        });
    });

</script>
