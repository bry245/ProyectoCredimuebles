@model CrediV1_Prueba.Entities.ProveedorEnt
@{
    ViewData["Title"] = "EditarProveedor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<hr />

<div class="container">
    <div class="card shadow-2-strong mb-5 mb-lg-0" style="border-radius: 16px;">
        <div class="card-body p-4">
            <div class="form-outline mb-5 mb-xl-4">
                <h2>Editar Proveedor</h2>
            </div>
            <form id="editarProveedorForm">
                <input type="hidden" id="idProveedor" name="idProveedor" value="@Model.idProveedor" />
                <div class="row">
                    <div class="col-lg-8 col-xl-6">
                        <div class="form-outline mb-5 mb-xl-4">
                            <input type="text" id="nombre" name="nombre" value="@Model.nombre" class="form-control form-control-lg" placeholder="Nombre" />
                        </div>
                        <div class="form-outline mb-5 mb-xl-4">
                            <input type="text" id="telefono" name="telefono" value="@Model.telefono" class="form-control form-control-lg" placeholder="Teléfono" />
                        </div>
                        <div class="form-outline mb-5 mb-xl-4">
                            <select id="Estado" name="Estado" class="form-control form-control-lg">
                                <option value="@Model.estado" selected>
                                    @if (@Model.estado)
                                    {
                                        <text>Activo</text>
                                    }
                                    else
                                    {
                                        <text>Inactivo</text>
                                    }
                                </option>
                                <option value="true">Activo</option>
                                <option value="false">Inactivo</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-8 col-xl-6">
                        <div class="form-outline mb-5 mb-xl-4">
                            <input type="text" id="correo" name="correo" value="@Model.correo" class="form-control form-control-lg" placeholder="Email" />
                        </div>
                        <div class="form-outline mb-5 mb-xl-4">
                            <input type="text" id="direccion" name="direccion" value="@Model.direccion" class="form-control form-control-lg" placeholder="Dirección" />
                        </div>
                    </div>
                    <div class="col-lg-8 col-xl-6">
                        <button class="btn btn-danger" type="button" id="guardar">Guardar</button>
                    </div>
                    <div class="col-lg-8 col-xl-6">
                        <a href="@Url.Action("ListadoProveedor", "Proveedor")" class="btn btn-danger">Volver</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<hr />

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.getElementById('guardar').addEventListener('click', async () => {
        const idProveedor = document.getElementById('idProveedor').value;
        const nombre = document.getElementById('nombre').value;
        const telefono = document.getElementById('telefono').value;
        const correo = document.getElementById('correo').value;
        const direccion = document.getElementById('direccion').value;
        const Estado = document.getElementById('estado').value === "true";

        const proveedor = {
            idProveedor,
            nombre,
            telefono,
            correo,
            direccion,
            Estado
        };

        try {
            const response = await fetch('@Url.Action("GuardarEditarProveedor", "Proveedor")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(proveedor)
            });

            if (response.ok) {
                Swal.fire({
                    icon: 'success',
                    title: 'Proveedor actualizado',
                    text: 'El proveedor ha sido actualizado correctamente.'
                }).then(() => {
                    window.location.href = '@Url.Action("ListadoProveedor", "Proveedor")';
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Hubo un problema al actualizar el proveedor.'
                });
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Hubo un problema al actualizar el proveedor.'
            });
        }
    });
</script>
