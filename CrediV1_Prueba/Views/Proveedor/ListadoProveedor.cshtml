@model IEnumerable<CrediV1_Prueba.Entities.ProveedorEnt>
@{
	ViewData["Title"] = "ListadoProveedor";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">

	<div class="container mt-4">
		<a href="@Url.Action("AgregarProveedor","Proveedor")" class="btn" type="submit" id="button-addon2"> <i class="">Agregar Proveedor</i>  </a>
		<div class="row justify-content-end">
			<div class="col-md-6">
				<form action="#" method="GET" class="form-inline">
					<div class="input-group">
						<input type="text" class="form-control" placeholder="Buscar..." aria-label="Buscar" aria-describedby="button-addon2">
						<div class="input-group-append">
						</div>
						<button class="btn" type="submit" id="button-addon2"> <i class=" fa fa-search"></i> </button>
					</div>
				</form>
			</div>
		</div>
	</div>

	<div class="container mt-4">
		<table class="table table-hover" style="text-align:center">
			<thead>
				<tr>
					<th>Nombre del Proveedor</th>
					<th>Telefono</th>
					<th>Dirección</th>
					<th>Correo Electrónico</th>
					<th>Estado</th>
					<th>Acciones</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var proveedor in @Model)
				{
					<tr>
						<input type="hidden" name="idProveedor" id="idProveedor" value="@proveedor.idProveedor" />
						<td>@proveedor.nombre</td>
						<td>@proveedor.telefono</td>
						<td>@proveedor.direccion</td>
						<td>@proveedor.correo</td>
						@if (proveedor.Estado)
						{
							<td>Activo</td>
						}
						else
						{
							<td>Inactivo</td>
						}
						<td style="text-align:center">

							@if (proveedor.Estado)
							{
								<button class="btn btn-danger confirmButtonInactivar"
										data-id="@proveedor.idProveedor"
										data-nombre="@proveedor.nombre"
										data-correo="@proveedor.correo"
										data-direccion="@proveedor.direccion"
										data-telefono="@proveedor.telefono">
									Inactivar
								</button>
							}
							else
							{
							<button class="btn btn-danger confirmButtonInactivar"
									data-id="@proveedor.idProveedor"
									data-nombre="@proveedor.nombre"
									data-correo="@proveedor.correo"
									data-direccion="@proveedor.direccion"
									data-telefono="@proveedor.telefono">
									Activar
							</button>
							}
						
							<a class="btn btn-danger" asp-controller="Proveedor" asp-action="EditarProveedor" asp-route-Proveedor="@proveedor.idProveedor">Editar</a>
						</td>
					</tr>
				}

			</tbody>
		</table>
	</div>
	<nav aria-label="Page navigation example" style="background-color:white">
		<ul class="pagination justify-content-center" style="background-color:#dce5e4">
			<li class="page-item disabled">
				<a class="page-link" href="#" tabindex="-1" aria-disabled="true">Anterior</a>
			</li>
			<li class="page-item"><a class="page-link" href="#">1</a></li>
			<li class="page-item"><a class="page-link" href="#">2</a></li>
			<li class="page-item"><a class="page-link" href="#">3</a></li>
			<li class="page-item">
				<a class="page-link" href="#">Siguiente</a>
			</li>
		</ul>
	</nav>

</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
	document.querySelectorAll('.confirmButtonInactivar').forEach(button => {
		button.addEventListener('click', async function () {
			let idProveedor = this.getAttribute('data-id');
			let nombre = this.getAttribute('data-nombre');
			let correo = this.getAttribute('data-correo');
			let direccion = this.getAttribute('data-direccion');
			let telefono = this.getAttribute('data-telefono');
			let estado = false;

			const data = {
				idProveedor: parseInt(idProveedor),
				nombre: nombre,
				correo: correo,
				direccion: direccion,
				telefono: telefono,
				estado: estado
			};

			Swal.fire({
				title: '¿Estás seguro?',
				text: "¡!",
				icon: 'warning',
				showCancelButton: true,
				confirmButtonColor: '#0d6efd',
				cancelButtonColor: '#c31e1e',
				confirmButtonText: 'Sí',
				cancelButtonText: 'Cancelar'
			}).then(async (result) => {
				if (result.isConfirmed) {
					try {
						const response = await fetch('@Url.Action("DesactivarProveedor", "Proveedor")', {
							method: 'POST',
							headers: {
								'Content-Type': 'application/json'
							},
							body: JSON.stringify(data)
						});

						if (response.ok) {
							Swal.fire({
								icon: 'success',
								title: 'Accion Realizada',
								text: 'El proveedor ha sido inactivado correctamente.'
							}).then(() => {
								window.location.href = '@Url.Action("ListadoProveedor", "Proveedor")';
							});
						} else {
							Swal.fire({
								icon: 'error',
								title: 'Error',
								text: 'Hubo un problema al inactivar el proveedor.'
							});
						}
					} catch (error) {
						Swal.fire({
							icon: 'error',
							title: 'Error',
							text: 'Hubo un problema al inactivar el proveedor.'
						});
					}
				}
			});
		});
	});


</script>
